(in-package #:claw-raylib.examples)

(defun 3d-picking ()
  (let ((screen-width 800)
        (screen-height 450))
    (raylib:with-window ("raylib [core] example - 3d picking" (screen-width screen-height))
      (let ((camera (raylib:make-camera :position (raylib:make-vector3 :x 0.0 :y 10.0 :z 10.0)
                                        :target (raylib:vector3-zero)
                                        :up (raylib:make-vector3 :x 0.0 :y 1.0 :z 0.0)
                                        :projection (foreign-enum-value 'raylib:camera-projection :perspective)
                                        :fovy 45.0))
            (cube-position (raylib:make-vector3 :x 0.0 :y 1.0 :z 0.0))
            (cube-size (raylib:make-vector3 :x 2.0 :y 2.0 :z 2.0)))
        (let ((ray (raylib:make-ray))
              (ray-collision (raylib:make-ray-collision :hit nil))
              (mouse-position (raylib:make-vector2))
              (cube-bounding-box (raylib:make-bounding-box
                                  :min (raylib:make-vector3 :x (- (raylib:vector3-x cube-position)
                                                                  (/ (raylib:vector3-x cube-size) 2.0))
                                                            :y (- (raylib:vector3-y cube-position)
                                                                  (/ (raylib:vector3-y cube-size) 2.0))
                                                            :z (- (raylib:vector3-z cube-position)
                                                                  (/ (raylib:vector3-z cube-size) 2.0)))
                                  :max (raylib:make-vector3 :x (+ (raylib:vector3-x cube-position)
                                                                  (/ (raylib:vector3-x cube-size) 2.0))
                                                            :y (+ (raylib:vector3-y cube-position)
                                                                  (/ (raylib:vector3-y cube-size) 2.0))
                                                            :z (+ (raylib:vector3-z cube-position)
                                                                  (/ (raylib:vector3-z cube-size) 2.0))))))
          (raylib:set-target-fps 60)
          (loop :until (raylib:window-should-close)
                :do (when (raylib:is-cursor-hidden)
                      (raylib:update-camera camera #.(foreign-enum-value 'raylib:camera-mode :first-person)))
                    (when (raylib:is-mouse-button-pressed #.(foreign-enum-value 'raylib:mouse-button :right))
                      (if (raylib:is-cursor-hidden) (raylib:enable-cursor) (raylib:disable-cursor)))
                    (when (raylib:is-mouse-button-pressed #.(foreign-enum-value 'raylib:mouse-button :left))
                      (if (not (raylib:ray-collision-hit ray-collision))
                          (progn
                            (raylib:%get-mouse-position (& mouse-position))
                            (raylib:%get-screen-to-world-ray (& ray) (& mouse-position) (& camera))
                            (raylib:%get-ray-collision-box (& ray-collision) (& ray) (& cube-bounding-box)))
                          (setf (raylib:ray-collision-hit ray-collision) nil)))
                    (raylib:with-drawing
                      (raylib:clear-background raylib:+raywhite+)
                      (raylib:with-mode-3d camera
                        (if (raylib:ray-collision-hit ray-collision)
                            (progn
                              (raylib:draw-cube cube-position (raylib:vector3-x cube-size) (raylib:vector3-y cube-size) (raylib:vector3-z cube-size) raylib:+red+)
                              (raylib:draw-cube-wires cube-position (raylib:vector3-x cube-size) (raylib:vector3-y cube-size) (raylib:vector3-z cube-size) raylib:+maroon+)
                              (raylib:draw-cube-wires cube-position (+ (raylib:vector3-x cube-size) 0.2) (+ (raylib:vector3-y cube-size) 0.2) (+ (raylib:vector3-z cube-size) 0.2) raylib:+green+)
                              (raylib:draw-grid 10 1.0))
                            (progn
                              (raylib:draw-cube cube-position (raylib:vector3-x cube-size) (raylib:vector3-y cube-size) (raylib:vector3-z cube-size) raylib:+gray+)
                              (raylib:draw-cube-wires cube-position (raylib:vector3-x cube-size) (raylib:vector3-y cube-size) (raylib:vector3-z cube-size) raylib:+darkgray+)))
                        (raylib:draw-ray ray raylib:+maroon+)
                        (raylib:draw-grid 10 1.0))
                      (raylib:draw-text "Try clicking on the box with your mouse!" 240 10 20 raylib:+darkgray+)
                      (when (raylib:ray-collision-hit ray-collision)
                        (raylib:draw-text "BOX SELECTED" (floor (- screen-width (raylib:measure-text "BOX SELECTED" 30)) 2) (floor screen-height 10) 30 raylib:+green+))
                      (raylib:draw-text "Right click mouse to toggle camera controls" 10 430 10 raylib:+gray+)
                      (raylib:draw-fps 10 10))))))))
